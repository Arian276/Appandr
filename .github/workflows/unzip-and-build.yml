name: Unzip & Build Android APK

on:
  workflow_dispatch:   # lo ejecutás manualmente desde Actions
  push:
    branches: [ main ]
    paths:
      - 'BarrileteCosmicTV.zip'

permissions:
  contents: write

jobs:
  unzip_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) Limpiar raíz pero mantener git, workflows y el zip
      - name: Clean root
        run: |
          shopt -s extglob dotglob
          rm -rf !(.git|.github|BarrileteCosmicTV.zip)

      # 2) Descomprimir
      - name: Unzip BarrileteCosmicTV.zip
        run: |
          unzip -o BarrileteCosmicTV.zip -d extracted
          ROOT_DIR=$(find extracted -mindepth 1 -maxdepth 1 -type d | head -n1 || echo "extracted")
          shopt -s dotglob
          rsync -a "$ROOT_DIR"/ .
          rm -rf extracted BarrileteCosmicTV.zip
          echo "✅ Unzip listo"
          ls -la

      # 3) Preparar JDK y Android SDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x gradlew

      # 4) Compilar APK debug
      - name: Build Debug APK
        run: ./gradlew --no-daemon clean assembleDebug

      # 5) Subir APK como artefacto
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: '**/build/outputs/apk/debug/*.apk'
          if-no-files-found: error

      # 6) Commit resultado del unzip (opcional)
      - name: Commit unzip result
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Unzip + build" || echo "Sin cambios"
          git push || true
