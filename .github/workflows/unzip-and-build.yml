name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verificar ubicación de q.zip
        run: |
          echo "📦 Archivos en la raíz:"
          ls -la

      - name: Unzip q.zip (auto-detect root)
        shell: bash
        run: |
          set -euo pipefail
          test -f q.zip || { echo "❌ No está q.zip en la raíz"; exit 1; }
          rm -rf extracted
          unzip -o q.zip -d extracted
          echo "📁 Después de unzip:"
          (cd extracted && tree -L 3 || true)

          CANDIDATE=$(find extracted -maxdepth 3 -type f \( -name "settings.gradle" -o -name "settings.gradle.kts" -o -name "gradlew" \) -printf '%h\n' | head -n1 || true)
          if [ -z "${CANDIDATE:-}" ]; then
            echo "❌ No encontré settings.gradle(.kts) ni gradlew dentro del ZIP."
            exit 1
          fi
          echo "↪️ Proyecto detectado en: $CANDIDATE"

          shopt -s dotglob
          rsync -a "$CANDIDATE"/ .
          rm -rf extracted q.zip

          echo "📦 Raíz tras mover:"
          ls -la
          echo "📦 app/:"
          ls -la app || true
          echo "📦 gradle/wrapper:"
          ls -la gradle/wrapper || true

      - name: Validar estructura del proyecto
        run: |
          test -f settings.gradle.kts || test -f settings.gradle || { echo "❌ Falta settings.gradle"; exit 1; }
          test -f app/build.gradle.kts || test -f app/build.gradle || { echo "❌ Falta build.gradle en app"; exit 1; }
          test -f app/src/main/AndroidManifest.xml || { echo "❌ Falta AndroidManifest.xml"; exit 1; }

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Validar Gradle wrapper
        shell: bash
        run: |
          set -e
          test -f gradlew || { echo "❌ Falta gradlew en la raíz."; exit 1; }
          test -f gradle/wrapper/gradle-wrapper.jar || { echo "❌ Falta gradle-wrapper.jar"; exit 1; }
          test -s gradle/wrapper/gradle-wrapper.jar || { echo "❌ gradle-wrapper.jar pesa 0 bytes"; exit 1; }
          test -f gradle/wrapper/gradle-wrapper.properties || { echo "❌ Falta gradle-wrapper.properties"; exit 1; }
          chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace

      - name: "Diagnóstico: badging del APK"
        run: |
          echo "📦 Buscando badging information del APK"
          find . -type f -name "*.apk" -exec aapt dump badging {} \; || echo "❌ No se pudo extraer badging"

      - name: "Diagnóstico: listar APKs"
        run: |
          echo "📦 Archivos .apk encontrados:"
          find . -type f -name "*.apk" || echo "❌ No se encontró ningún APK"

      - name: "List build outputs (debug)"
        if: always()
        run: |
          echo "📂 Archivos en ./build"
          find . -type f -path "./build/**" -name "*.apk" || echo "❌ No se encontraron APKs en ./build"

      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ./app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
